{"version":3,"sources":["images/logo.svg","images/pencil.svg","images/avatar1.jpg","components/Header.js","utils/utils.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","apiData","authorization","baseUrl","api","options","this","_url","_headers","headers","fetch","method","then","res","ok","json","Promise","reject","status","userData","body","JSON","stringify","name","about","avatar","link","photoData","card","_id","Card","props","imageStyle","backgroundImage","key","onClick","style","type","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","initialCards","catch","err","console","log","onEditAvatar","pen","data-id","onEditProfile","onAddPlace","map","item","onCardClick","Footer","PopupWithForm","isOpen","id","onClose","heading","children","buttonText","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","button","placeholder","required","pattern","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.34318dc5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.9a053c9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar1.66989297.jpg\";","import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"logo\" src={logo} alt=\"лого\" />\n        </header>\n    );\n}\nexport default Header;","\n//Api Token\nconst apiData = {\n    authorization: '34b93c83-0a5b-42af-bf4b-3169bf836bcd',\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12'\n};\nexport default apiData;\n","import apiData from './utils.js';\n\nclass Api {\n\n    constructor(options) {\n        this._url = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    //получить изначальный массив карточек\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            method: 'GET',\n            headers: this._headers,\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n                }\n            });\n    }\n\n    //получить данные пользователя\n    getUserInfo() {\n        return fetch(`${this._url}/users/me`, {\n            headers: this._headers,\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n                }\n            });\n    }\n\n    //обновить данные юзера\n    editUserInfo(userData) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: userData.name,\n                about: userData.about\n            }),\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n                }\n            });\n    }\n\n    //Редактирование аватара\n    editUserAvatar(userData) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: userData.link\n            })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Что-то пошло не так: ${res.status}`);\n            })\n    }\n\n    //Добавление новой карточки на сервер\n    addNewCard(photoData) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: photoData.name,\n                link: photoData.link\n\n            })\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Что-то пошло не так: ${res.status}`);\n            })\n    }\n\n    //Удаление Карточки\n    deleteCard(card) {\n        return fetch(`${this._url}/cards/${card._id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Что-то пошло не так: ${res.status}`);\n            })\n    }\n\n    //Добавление Лайков\n    addLike(card) {\n        return fetch(`${this._url}/cards/likes/${card._id}`, {\n            method: 'PUT',\n            headers: this._headers,\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Что-то пошло не так: ${res.status}`);\n            })\n    }\n\n    //Удаление Лайков\n    deleteLike(card) {\n        return fetch(`${this._url}/cards/likes/${card._id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Что-то пошло не так: ${res.status}`);\n            })\n    }\n}\n\n//создаем экземпляр класса Api\nconst api = new Api({\n    baseUrl: apiData.baseUrl,\n    headers: {\n        authorization: apiData.authorization,\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api;\n","import React from 'react';\n\nfunction Card(props) {\n    function handleClick() {\n        props.onClick(props.card)\n    }\n    const imageStyle = {\n        backgroundImage: `url(${props.card.link})`,\n    };\n    return (\n        <div className=\"card\" key={props.card._id}>\n            <div className=\"card__image\" onClick={handleClick} style={imageStyle} />\n            <div className=\"card__description\">\n                <h3 className=\"card__title\">{props.card.name}</h3>\n                <div className=\"card__like\">\n                    <button className=\"card__like-btn\" type=\"button\"></button>\n                    <span className=\"card__like-counter\">{props.card.likes.length}</span>\n                </div>\n            </div>\n            <button className=\"card__trash\" type=\"button\"></button>\n        </div>\n    );\n}\nexport default Card;","import React from 'react';\nimport api from '../utils/Api.js';\nimport Card from './Card';\nimport pen from '../images/pencil.svg';\nimport avatar from '../images/avatar1.jpg';\n\nfunction Main(props) {\n    const [userName, setUserName] = React.useState('Darth Vader');\n    const [userDescription, setUserDescription] = React.useState('Lord of universe‎');\n    const [userAvatar, setUserAvatar] = React.useState(avatar);\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([userData, initialCards]) => {\n                setUserName(userData.name);\n                setUserDescription(userData.about);\n                setUserAvatar(userData.avatar);\n                setCards([...initialCards]);\n            })\n            .catch(err => console.log(err));\n\n    }, []);\n    return (\n\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__box\">\n                    <img className=\"profile__avatar\" src={userAvatar} alt=\"аватар\" />\n                    <img className=\"profile__pencil\" onClick={props.onEditAvatar} src={pen} alt=\"Редактировать\" />\n                </div>\n                <div className=\"profile__info\">\n                    <div>\n                        <h1 className=\"profile__name\" data-id=\"\">{userName}</h1>\n                        <p className=\"profile__description\">{userDescription}</p>\n                    </div>\n                    <button className=\"profile__edit-button\" onClick={props.onEditProfile} type=\"button\"/>\n                </div>\n                <button className=\"add-button\" onClick={props.onAddPlace} type=\"button\"/>\n            </section>\n\n            <section className=\"cards\">\n                {cards.map(item => <Card key={item._id} card={item} onClick={props.onCardClick} />)}\n            </section>\n        </main>\n\n    );\n}\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Самира</p>\n        </footer>\n    )\n}\nexport default Footer","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n        <section className={(props.isOpen ? \"popup popup_opened\" : \"popup\")} id={props.name}>\n            <div className=\"popup__content\" id=\"edit-popup-form\">\n                <button className=\"popup__close\" onClick={props.onClose} id=\"popup-close-edit\" type=\"button\">+</button>\n\n                <form className=\"popup__form popup__edit_profile\" name=\"edit\">\n                    <h3 className=\"popup__heading\">{props.heading}</h3>\n                    {props.children}\n                    <button className=\"popup__save-btn\" id=\"popup-save-btn\" type=\"submit\">{props.buttonText}</button>\n                </form>\n            </div>\n        </section>\n    );\n}\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup(props) {\n    return (\n        <section className={(props.card.isOpen ? \"popup popup_opened\" : \"popup\")} id=\"view-image\">\n            <figure className=\"popup__view\">\n                <button className=\"popup__close\" id=\"close-view\" onClick={props.onClose} type=\"button\">+</button>\n                <img className=\"popup__image\" alt={props.card.name} src={props.card.link} />\n                <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\n            </figure>\n        </section>\n    );\n}\nexport default ImagePopup;\n\n\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    isOpen: false,\n    name: '',\n    link: ''\n  });\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(false);\n  }\n  function handleCardClick(props) {\n    setSelectedCard({\n      isOpen: true,\n      name: props.name,\n      link: props.link\n    });\n  }\n\n  return (\n\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n      <PopupWithForm heading=\"Вы уверены?\" button=\"Да\" />\n\n      <PopupWithForm isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} heading=\"Обновить аватар?\" buttonText=\"Сохранить\">\n        <input className=\"popup__field popup__field_avatar\" id=\"url-input\" placeholder=\"Ссылка на картинку\"\n          type=\"url\" name=\"link\" required />\n        <span className=\"popup__span-error\" id=\"url-input-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} heading=\"Редактировать профиль\" buttonText=\"Сохранить\" >\n        <input className=\"popup__field popup__field_name\" id=\"name-field\" placeholder=\"Имя\" type=\"text\"\n          name=\"name\" required pattern=\"[A-Za-zА-Яа-яЁё -]*\" minLength=\"2\" maxLength=\"40\" />\n        <span className=\"popup__span-error\" id=\"name-field-error\"></span>\n        <input className=\"popup__field popup__field_job\" id=\"job-field\" placeholder=\"О себе\" type=\"text\"\n          name=\"about\" required minLength=\"2\" maxLength=\"200\" />\n        <span className=\"popup__span-error\" id=\"job-field-error\"></span>\n      </PopupWithForm >\n\n      <PopupWithForm isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} heading=\"Новое место\" buttonText=\"Создать\">\n        <input \n        className=\"popup__field popup__field_card\" \n        id=\"title-input\" \n        placeholder=\"Название\"\n        type=\"text\" \n        name=\"name\" \n        required \n        minLength=\"1\" \n        maxLength=\"30\" />\n        <span className=\"popup__span-error\" id=\"title-input-error\"></span>\n        <input \n        className=\"popup__field popup__field_link\" \n        id=\"url-input\" placeholder=\"Ссылка на картинку\"\n        type=\"url\" \n        required name=\"link\" />\n        <span className=\"popup__span-error\" id=\"url-input-error\"></span>\n      </PopupWithForm >\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      <Footer />\n\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}